user  www;
worker_processes auto;
error_log  /data/logs/nginx/error/error.log  crit;
pid        /opt/server/run/nginx/nginx.pid;

worker_rlimit_nofile 65535;

events {
	worker_connections 2048;
}

http {
	include       mime.types;
	default_type  application/octet-stream;
	types_hash_max_size 2048;
	
	server_names_hash_bucket_size 128;
	client_header_buffer_size 32k;
	large_client_header_buffers 4 32k;
	client_max_body_size 50m;

	sendfile on;
	tcp_nopush     on;

	keepalive_timeout 60;

	tcp_nodelay on;

	# Gzip Settings
	gzip on;
	gzip_min_length    1k;
	gzip_buffers       20 16k;
	gzip_http_version 1.1;
	gzip_comp_level    5;
	gzip_types         text/plain application/x-javascript text/css application/xml;
	gzip_vary on;
	gzip_proxied        expired no-cache no-store private auth;
	gzip_disable        msie6;


	# Hidden Nginx Version
	server_tokens off;

	#log format
	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" $http_x_forwarded_for';
        
	# include access_log.conf;

	proxy_cache_path /data/cache/proxy levels=1:2 keys_zone=cacheName:128m loader_threshold=300 loader_files=200 inactive=24h max_size=512m use_temp_path=off;
	# cache_path:           缓存存放的目录
	# keys_zone:            缓存 zone名及内存分配大小为
	# loader_files:         最大加载文件数量 (缺省: 100)
	# loader_threshold:     迭代的持续时间,以毫秒为单位(缺省: 200)
	# max_size:             缓存最大上限空间
	# inactive:             清空24h 没有访问过的文件

	fastcgi_cache_path /data/cache/fastcgi levels=1:2 keys_zone=FASTCGI_CACHE:32m loader_threshold=100 loader_files=50 inactive=5m max_size=64m use_temp_path=off;
	# cache_path:           缓存存放的目录
	# keys_zone:            缓存 zone名以及内存分配大小为
	# loader_files:         最大加载文件数量 (缺省: 100)
	# loader_threshold:     迭代的持续时间,以毫秒为单位(缺省: 200)
	# max_size:             缓存最大上限空间
	# inactive:             缓存文件过期时间
	# use_temp_path:        直接将内容缓存至 $cache_path 目录

	fastcgi_cache_key http://$host$request_uri;
	fastcgi_cache_use_stale error timeout invalid_header http_500;
	
	server {
		listen  80 default;
		server_name _;
		location / {
			return 444;
		}
	
	keepalive_timeout 0;
	add_header  X-Powered-By $hostname;
	}
	
	include vhost/*.conf;

}
